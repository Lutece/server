{"version":3,"sources":["../../server/models/Todo.js"],"names":["Todo","_","todo","type","getAllTodo","Model","find","getSomeTodo","otroe","createTodo","create","key","message","updateTodo","id","findByIdAndUpdate","removeTodo","findByIdAndRemove"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIMA,I,WACH,0BAAS,gDAAT,C,UAGA,0BAAS,SAAT,C,UAGA,wB,UACA,uBAAM,CAACC,CAAD,EAAIC,IAAJ,EAAU,EAAV,KAAiB,IAAvB,C,UAMA,wB,UACA,uBAAM,CAACD,CAAD,EAAIC,IAAJ,EAAU,EAAV,KAAiB,IAAvB,C,UAKA,wB,UACA,uBAAM,CAACD,CAAD,EAAIC,IAAJ,EAAU,EAAV,KAAiB,IAAvB,C,UAKA,0BAAS,EAAEC,MAAM,QAAR,EAAT,C,WACA,uBAAM,CAACF,CAAD,EAAIC,IAAJ,EAAU,EAAV,KAAiB,IAAvB,C,WAYA,0BAAS,EAAEC,MAAM,QAAR,EAAT,C,WASA,0BAAS,EAAEA,MAAM,QAAR,EAAT,C,gFAhDH,MAAMH,IAAN,CAAW;AAAA;AAAA;;AAAA;AAAA;;AASTI,eAAa;;AAEX,WAAO,KAAKC,KAAL,CAAWC,IAAX,EAAP;AACD;;AAIDC,gBAAc;AACZ,WAAO,KAAKF,KAAL,CAAWC,IAAX,EAAP;AACD;;AAIDE,UAAQ;AACN,WAAO,KAAKH,KAAL,CAAWC,IAAX,EAAP;AACD;;AAIKG,YAAN,CAAiBR,CAAjB,EAAoB,EAAEC,IAAF,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEiB,KAAKG,KAAL,CAAWK,MAAX,CAAkBR,IAAlB,CAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAIW,CAAC;AACNS,iBAAK,GADC;AAENC,qBAAS;AAFH,WAAD,CAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYMC,YAAN,CAAiBZ,CAAjB,EAAoB,EAAEa,EAAF,EAAMZ,IAAN,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEiB,KAAKG,KAAL,CAAWU,iBAAX,CAA6BD,EAA7B,EAAiCZ,IAAjC,EAAuC,EAAE,OAAO,IAAT,EAAvC,CAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAIW,IAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASMc,YAAN,CAAiBf,CAAjB,EAAoB,EAAEa,EAAF,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEiB,KAAKT,KAAL,CAAWY,iBAAX,CAA6BH,EAA7B,CAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAIW,IAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjDS,C;;;;;;WAKA,K;;;kBAqDI,IAAId,IAAJ,E","file":"Todo.js","sourcesContent":["import { mongoose } from '@graphite/mongoose';\nimport { property, mutation, graphQl, query, create, update, remove, allow } from '@graphite/decorators';\n\n@mongoose\n@graphQl\nclass Todo {\n  @property('String | required | minlength=1 | maxlength=90')\n  name;\n\n  @property('Boolean')\n  status = false;\n\n  @query()\n  @allow((_, todo, {}) => true)\n  getAllTodo() {\n\n    return this.Model.find();\n  }\n\n  @query()\n  @allow((_, todo, {}) => true)\n  getSomeTodo() {\n    return this.Model.find();\n  }\n\n  @query()\n  @allow((_, todo, {}) => true)\n  otroe() {\n    return this.Model.find();\n  }\n\n  @mutation({ type: 'create' })\n  @allow((_, todo, {}) => true)\n  async createTodo(_, { todo }) {\n    try {\n      return await this.Model.create(todo);\n    } catch (err) {\n      return [{\n        key: '1',\n        message: 'chfedau'\n      }]\n    }\n  }\n\n  @mutation({ type: 'update' })\n  async updateTodo(_, { id, todo }) {\n    try {\n      return await this.Model.findByIdAndUpdate(id, todo, { 'new': true });\n    } catch (err) {\n      return null;\n    }\n  }\n\n  @mutation({ type: 'remove' })\n  async removeTodo(_, { id }) {\n    try {\n      return await this.Model.findByIdAndRemove(id);\n    } catch (err) {\n      return null;\n    }\n  }\n}\n\nexport default new Todo();\n"]}